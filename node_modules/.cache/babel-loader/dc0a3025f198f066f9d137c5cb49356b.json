{"ast":null,"code":"var _jsxFileName = \"/home/mz/master/coding/react/62.notes-app-glassmorph/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport NotesList from \"./components/NotesList\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_NOTES = [{\n  id: nanoid(),\n  text: \"This is my First Note\",\n  date: \"09/03/2022\"\n}, {\n  id: nanoid(),\n  text: \"This is my Second Note\",\n  date: \"12/03/2022\"\n}, {\n  id: nanoid(),\n  text: \"This is my Third Note\",\n  date: \"07/04/2022\"\n}];\n\nconst App = () => {\n  _s();\n\n  const [darkMode, setDarkMode] = useState(false);\n  const [notes, setNotes] = useState(DUMMY_NOTES); // Adding notes\n\n  const handleAddNote = newNote => {\n    const date = new Date();\n    const addToNotes = {\n      id: nanoid(),\n      text: newNote,\n      date: date.toLocaleDateString()\n    };\n    const allNotes = [...notes, addToNotes];\n    setNotes(allNotes);\n  }; // Delete Note\n\n\n  const handleDeleteNote = id => {\n    const newNotes = notes.filter(note => note.id !== id);\n    setNotes(newNotes);\n  }; // Retrieve data from local storage (parse: convert from string to json)\n\n\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem(\"react-app-glassmorph-notes\"));\n\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []); // Save to local storage (stringify: convert text to strings)\n\n  useEffect(() => {\n    localStorage.setItem(\"react-app-glassmorph-notes\", JSON.stringify(notes));\n  }, [notes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${darkMode && \"dark-mode\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-container\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          className: `${darkMode && \"dark-mode\"}`,\n          handleToggleDarkMode: setDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n          notes: notes,\n          onHandleDeleteNote: handleDeleteNote,\n          onHandleAddNote: handleAddNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"o61CwqflXPm6QazZwtYLh+czaVU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mz/master/coding/react/62.notes-app-glassmorph/src/App.jsx"],"names":["React","useState","useEffect","Header","NotesList","nanoid","DUMMY_NOTES","id","text","date","App","darkMode","setDarkMode","notes","setNotes","handleAddNote","newNote","Date","addToNotes","toLocaleDateString","allNotes","handleDeleteNote","newNotes","filter","note","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,MAAMC,WAAW,GAAG,CAChB;AACIC,EAAAA,EAAE,EAAEF,MAAM,EADd;AAEIG,EAAAA,IAAI,EAAE,uBAFV;AAGIC,EAAAA,IAAI,EAAE;AAHV,CADgB,EAMhB;AACIF,EAAAA,EAAE,EAAEF,MAAM,EADd;AAEIG,EAAAA,IAAI,EAAE,wBAFV;AAGIC,EAAAA,IAAI,EAAE;AAHV,CANgB,EAWhB;AACIF,EAAAA,EAAE,EAAEF,MAAM,EADd;AAEIG,EAAAA,IAAI,EAAE,uBAFV;AAGIC,EAAAA,IAAI,EAAE;AAHV,CAXgB,CAApB;;AAkBA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACK,WAAD,CAAlC,CAHc,CAKd;;AACA,QAAMS,aAAa,GAAIC,OAAD,IAAa;AAC/B,UAAMP,IAAI,GAAG,IAAIQ,IAAJ,EAAb;AACA,UAAMC,UAAU,GAAG;AACfX,MAAAA,EAAE,EAAEF,MAAM,EADK;AAEfG,MAAAA,IAAI,EAAEQ,OAFS;AAGfP,MAAAA,IAAI,EAAEA,IAAI,CAACU,kBAAL;AAHS,KAAnB;AAMA,UAAMC,QAAQ,GAAG,CAAC,GAAGP,KAAJ,EAAWK,UAAX,CAAjB;AAEAJ,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACH,GAXD,CANc,CAmBd;;;AACA,QAAMC,gBAAgB,GAAId,EAAD,IAAQ;AAC7B,UAAMe,QAAQ,GAAGT,KAAK,CAACU,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACjB,EAAL,KAAYA,EAAnC,CAAjB;AACAO,IAAAA,QAAQ,CAACQ,QAAD,CAAR;AACH,GAHD,CApBc,CAyBd;;;AACApB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMuB,UAAU,GAAGC,IAAI,CAACC,KAAL,CACfC,YAAY,CAACC,OAAb,CAAqB,4BAArB,CADe,CAAnB;;AAGA,QAAIJ,UAAJ,EAAgB;AACZX,MAAAA,QAAQ,CAACW,UAAD,CAAR;AACH;AACJ,GAPQ,EAON,EAPM,CAAT,CA1Bc,CAmCd;;AACAvB,EAAAA,SAAS,CAAC,MAAM;AACZ0B,IAAAA,YAAY,CAACE,OAAb,CACI,4BADJ,EAEIJ,IAAI,CAACK,SAAL,CAAelB,KAAf,CAFJ;AAIH,GALQ,EAKN,CAACA,KAAD,CALM,CAAT;AAOA,sBACI;AAAK,IAAA,SAAS,EAAG,GAAEF,QAAQ,IAAI,WAAY,EAA3C;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI,QAAC,MAAD;AACI,UAAA,SAAS,EAAG,GAAEA,QAAQ,IAAI,WAAY,EAD1C;AAEI,UAAA,oBAAoB,EAAEC;AAF1B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,SAAD;AACI,UAAA,KAAK,EAAEC,KADX;AAEI,UAAA,kBAAkB,EAAEQ,gBAFxB;AAGI,UAAA,eAAe,EAAEN;AAHrB;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA5DD;;GAAML,G;;KAAAA,G;AA8DN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport NotesList from \"./components/NotesList\";\nimport { nanoid } from \"nanoid\";\n\nconst DUMMY_NOTES = [\n    {\n        id: nanoid(),\n        text: \"This is my First Note\",\n        date: \"09/03/2022\",\n    },\n    {\n        id: nanoid(),\n        text: \"This is my Second Note\",\n        date: \"12/03/2022\",\n    },\n    {\n        id: nanoid(),\n        text: \"This is my Third Note\",\n        date: \"07/04/2022\",\n    },\n];\n\nconst App = () => {\n    const [darkMode, setDarkMode] = useState(false);\n\n    const [notes, setNotes] = useState(DUMMY_NOTES);\n\n    // Adding notes\n    const handleAddNote = (newNote) => {\n        const date = new Date();\n        const addToNotes = {\n            id: nanoid(),\n            text: newNote,\n            date: date.toLocaleDateString(),\n        };\n\n        const allNotes = [...notes, addToNotes];\n\n        setNotes(allNotes);\n    };\n\n    // Delete Note\n    const handleDeleteNote = (id) => {\n        const newNotes = notes.filter((note) => note.id !== id);\n        setNotes(newNotes);\n    };\n\n    // Retrieve data from local storage (parse: convert from string to json)\n    useEffect(() => {\n        const savedNotes = JSON.parse(\n            localStorage.getItem(\"react-app-glassmorph-notes\")\n        );\n        if (savedNotes) {\n            setNotes(savedNotes);\n        }\n    }, []);\n\n    // Save to local storage (stringify: convert text to strings)\n    useEffect(() => {\n        localStorage.setItem(\n            \"react-app-glassmorph-notes\",\n            JSON.stringify(notes)\n        );\n    }, [notes]);\n\n    return (\n        <div className={`${darkMode && \"dark-mode\"}`}>\n            <div className=\"app\">\n                <div className=\"app-container\">\n                    <Header\n                        className={`${darkMode && \"dark-mode\"}`}\n                        handleToggleDarkMode={setDarkMode}\n                    />\n                    <NotesList\n                        notes={notes}\n                        onHandleDeleteNote={handleDeleteNote}\n                        onHandleAddNote={handleAddNote}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}